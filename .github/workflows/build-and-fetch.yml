name: "Build and Fetch Projects"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  fetch-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Use Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: "Install dependencies"
        run: npm ci --legacy-peer-deps

      - name: "Run security audit (fail on high/critical)"
        run: npm run audit:ci

      - name: "Ensure GitHub token is present (fail-fast)"
        if: github.event_name != 'pull_request'
        run: |
          if [ -z "${{ secrets.GH_PROJECTS_TOKEN }}" ] && [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "ERROR: Missing GH_PROJECTS_TOKEN and GITHUB_TOKEN secrets. Aborting build.";
            exit 1;
          fi

      - name: "Fetch GitHub pinned projects"
        if: github.event_name != 'pull_request'
        env:
          GH_PROJECTS_TOKEN: ${{ secrets.GH_PROJECTS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
        run: |
          # Keep logging minimal (no secret values). The fetch script will log its own status.
          node scripts/fetchProjects.js

      - name: "Build"
        run: npm run build

      - name: "Upload build artifact"
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: build

      - name: "Deploy to Vercel"
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
