name: Build and Fetch Projects

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  fetch-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Fetch GitHub pinned projects
        if: github.event_name != 'pull_request'
        env:
          GH_PROJECTS_TOKEN: ${{ secrets.GH_PROJECTS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
        run: |
          node scripts/fetchProjects.js

      - name: Post-process fetched projects (prefer github.io docs)
        if: github.event_name != 'pull_request'
        run: |
          node scripts/postprocessProjects.js

      - name: Build
        run: npm run build

      - name: Prepare Vercel prebuilt output
        run: |
          echo "Preparing .vercel/output"
          rm -rf .vercel/output || true
          mkdir -p .vercel/output/static
          cp -r build/* .vercel/output/static/ || true
          mkdir -p .vercel/output/functions || true
            printf '%s\n' '{' '  "version": 3,' '  "routes": [' '    { "handle": "filesystem" },' '    { "src": "/(.*)", "dest": "/index.html" }' '  ]' '}' > .vercel/output/config.json
          echo '{}' > .vercel/output/.vc-config.json || true

      - name: Deploy to Vercel (prebuilt)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "Listing .vercel/output before deploy"
          ls -la .vercel || true
          ls -la .vercel/output || true
          npx --yes vercel --prod --token "$VERCEL_TOKEN" --yes --prebuilt .
